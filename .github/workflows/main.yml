
name: 'testing'
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  check-links:
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    # The `steps` key groups together all the steps that will run as part of the `check-links` job. Each job in a workflow has its own `steps` section.
    steps:
      # The `uses` key tells the job to retrieve the action named `actions/checkout`. This is an action that checks out your repository and downloads it to the runner, allowing you to run actions against your code (such as testing tools). You must use the checkout action any time your workflow will use the repository's code or you are using an action defined in the repository.
      - name: Checkout
        uses: actions/checkout@v4

      # This step uses the `actions/setup-node` action to install the specified version of the Node.js software package on the runner, which gives you access to the `npm` command.
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 17.0.x
          cache: npm

      # The `run` key tells the job to execute a command on the runner. In this example, `npm ci` is used to install the npm software packages for the project.
      - name: Install
        run: npm ci

      # This step uses the `trilom/file-changes-action` action to gather all the changed files. This example is pinned to a specific version of the action, using the `a6ca26c14274c33b15e6499323aac178af06ad4b` SHA.
      #
      # In this example, this step creates the file "${{ env.HOME }}/files.json", among others.
      - name: Gather files changed
        uses: trilom/file-changes-action@a6ca26c14274c33b15e6499323aac178af06ad4b
        with:
          fileOutput: 'json'

      # To help with verification, this step lists the contents of `files.json`. This will be visible in the workflow run's log, and can be useful for debugging.
      - name: Show files changed
        run: cat $HOME/files.json

      # This step uses the `run` command to execute a script that is stored in the repository at `script/rendered-content-link-checker.mjs` and passes all the parameters it needs to run.
      - name: build prod project
        run: npm run build:prod
      - name: unit testing
        run: npm run unit



#name: testing, building
#
#on:
#push:
# branches:[master]
#    pull_request:
#      branches:[master]
#jobs:
# pipeline:
#   runs-on:ubuntu-latest
# strategy:
# matrix:
#    node-version:[18.x]
# steps:
#   - name: Setup Node.js environment
#     uses: actions/setup-node@v18.12.1
#     with:
#       node-version: ${{ matrix.node }}
#
#   - name: Checkout master branch
#     uses: actions/checkout@v2
#     -name:install modules
#     run:npm install
#     -name:build production project
#     run:npm run build:prod
#     -name:unit testing
#     run:npm run unit


